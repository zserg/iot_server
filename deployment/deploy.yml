---
- hosts: '{{ target }}'
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: yes
  sudo_user: '{{ project_name }}'

  tasks:
  - name: Pull sources from the repository.
    git: repo={{ project_repo }} dest={{ project_root }}/code/
    when: vm == 0
    notify:
      - restart web frontend

  # - name: Upload configuration.
  #   copy: src=local_settings.py dest={{ project_root }}/code/{{ project_name }}/{{ project_name }}/local_settings.py
  #   when: vm == 0

  - name: Upgrade the virtualenv.
    pip: requirements={{ project_root }}/code/requirements.txt
         virtualenv={{ project_root }}/env/
         virtualenv_python=python3

  - name: Install dev packages in virtualenv.
    pip: name=ipython
         virtualenv={{ project_root }}/env/
         virtualenv_python=python3

  - name: Sync Django database (make migrations).
    # shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/webapp/manage.py syncdb --migrate --noinput"
    shell: "{{ project_root }}/env/bin/python3 {{ project_root }}/code/{{ project_name }}/manage.py makemigrations"

  - name: Sync Django database (migrate).
    # shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/webapp/manage.py syncdb --migrate --noinput"
    shell: "{{ project_root }}/env/bin/python3 {{ project_root }}/code/{{ project_name }}/manage.py migrate"

  # - name: Generate Django media.
  #   shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/webapp/manage.py generatemedia"

  - name: restart gunicorn
    service: name=gunicorn state=restarted
    become: true
    become_user: root

  handlers:
    - include: handlers.yml


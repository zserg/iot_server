---
- hosts: '{{ target }}'
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: yes

  tasks:
  - name: Create the project directory.
    file: state=directory path={{ project_root }}

  - name: Create user.
    user: home={{ project_root }}/home/
          name={{ project_name }}
          password=$1$SomeSalt$hNefXjRHS5V9yCxi9J0vk1
          state=present

  - name: Update the project directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}

  - name: Create the code directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}/code/

  - name: Install required system packages.
    apt: pkg={{ item }} state=installed update-cache=yes
    with_items: '{{ system_packages }}'

  # - name: Install required Python packages.
  #   easy_install: name={{ item }} executable=easy_install3
  #   with_items: '{{ python_packages }}'

  - name: Install required Python packages.
    easy_install: name={{ item }} executable=easy_install
    with_items: '{{ python_packages }}'

  - name: Mount code folder.
    mount: fstype=vboxsf opts=uid={{ project_name }},gid={{ project_name }},noauto name={{ project_root }}/code/ src={{ project_name }} state=mounted
    when: vm == 1

  - name: Change permissions.
    shell: chown -R {{ project_name }}:{{ project_name }} {{ project_root }}

  - name: Create Postgreql database
    postgresql_db: name=webapp
    sudo: yes
    sudo_user: postgres

  - name: Create Postgreql database user
    #postgresql_user: db=webapp name={{ DBUSER }}  password={{ DBPASSWORD }} priv=all state=present
    postgresql_user: db=webapp name={{ DBUSER }} priv=all state=present
    postgresql_user: name={{ DBUSER }}  role_attr_flags=NOSUPERUSER,CREATEDB
    sudo: yes
    sudo_user: postgres

  # - name: Install nginx configuration file.
  #   copy: src=files/conf/nginx.conf dest=/etc/nginx/sites-enabled/{{ project_name }}
  #   notify: restart nginx
  - name: Install gunicorn configuration file.
    copy: src={{ item }} dest=/etc/systemd/system/{{ item }}
    with_items:
      - gunicorn.service
      - gunicorn.socket
    #notify: restart gunicorn

  - name: Enable gunicorn service
    service: name=gunicorn enabled=yes

  - name: Create /run/gunicorn
    file: path=/run/gunicorn state=directory

  - name: Change permissions for gunicorn.
    shell: chown -R {{project_name }}:{{ project_name }} /run/gunicorn



  # - name: Install init scripts.
  #   copy: src=files/init/{{ item }}.conf dest=/etc/init/{{ project_name }}_{{ item }}.conf
  #   with_items: {{ initfiles }}

  handlers:
    - include: handlers.yml

- include: deploy.yml

- hosts: '{{ target }}'
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:
  - name: Restart services.
    service: name={{ item }} state=restarted
    with_items: "{{ initfiles }}"
